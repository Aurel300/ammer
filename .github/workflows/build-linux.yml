name: Build Linux

on: [push, pull_request]

jobs:
  test-hashlink:
    runs-on: ubuntu-latest
    steps:

    - name : Adjust path
      run : |
        if [[ -z "$GITHUB_PATH" ]]; then
            echo "${HOME}/.local/bin" >> $GITHUB_PATH
        fi

    - name: Update apt and install necessary packages
      run : |
        if ! command -v sudo &> /dev/null; then
            apt install sudo
        fi
        sudo apt update
        sudo apt-get install -y software-properties-common

    - name: Install Haxe (4.0.3)
      uses: haxeui/haxeui-core/.github/actions/haxe@master
      with:
        haxe-version: 4.0.3

    - name: Checkout ammer
      uses: actions/checkout@v2
      with:
        path: "ammer"

    - name: Set up haxelibs
      run: |
        haxelib dev ammer ammer
        haxelib install utest

    - name: Build native library
      run: |
        cd ammer/tests/native
        make -f Makefile.linux

    - name: Checkout HashLink
      uses: actions/checkout@v2
      with:
        repository: "HaxeFoundation/hashlink"
        path: "hashlink"

    - name: Build and install HashLink
      run: |
        cd hashlink
        sudo apt-get install libpng-dev
        sudo apt-get install libturbojpeg-dev
        sudo apt-get install libvorbis-dev
        sudo apt-get install libopenal-dev
        sudo apt-get install libsdl2-dev
        sudo apt-get install libmbedtls-dev
        sudo apt-get install libuv1-dev
        make
        sudo make install

    - name: Compile tests
      run: |
        cd ammer/tests
        haxe build-hl.hxml
        cd bin/hl
        cp $GITHUB_WORKSPACE/hashlink/libhl.so .

    - name: Run tests
      run: |
        cd ammer/tests/bin/hl
        LD_LIBRARY_PATH=../../native:. hl test.hl

  test-hxcpp:
    runs-on: ubuntu-latest
    steps:
    - name : Adjust path
      run : |
        if [[ ! -z "$GITHUB_PATH" ]]; then
            echo "${HOME}/.local/bin" >> $GITHUB_PATH
        fi

    - name: Update apt and install necessary packages
      run : |
        if ! command -v sudo &> /dev/null; then
            apt install sudo
        fi
        sudo apt update
        sudo apt-get install -y software-properties-common

    - name: Install Haxe (4.0.3)
      uses: haxeui/haxeui-core/.github/actions/haxe@master
      with:
        haxe-version: 4.0.3

    - name: Checkout ammer
      uses: actions/checkout@v2
      with:
        path: "ammer"

    - name: Set up haxelibs
      run: |
        haxelib dev ammer ammer
        haxelib install utest

    - name: Build native library
      run: |
        cd ammer/tests/native
        make -f Makefile.linux

    - name: Install hxcpp
      run: |
        haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp.git
        cd `haxelib path hxcpp | head -n 1`
        cd tools/hxcpp
        haxe compile.hxml

    - name: Compile tests
      run: |
        cd ammer/tests
        haxe build-cpp.hxml

    - name: Run tests
      run: |
        cd ammer/tests/bin/cpp
        LD_LIBRARY_PATH=../../native:. ./Main

  test-lua:
    runs-on: ubuntu-latest
    steps:

    - name : Adjust path
      run : |
        if [[ ! -z "$GITHUB_PATH" ]]; then
            echo "${HOME}/.local/bin" >> $GITHUB_PATH
        fi

    - name: Install sudo package
      run : |
        if ! command -v sudo &> /dev/null; then
            apt install sudo
        fi
        sudo apt update
        sudo apt-get install -y software-properties-common

    - name: Install Haxe (4.0.3)
      uses: haxeui/haxeui-core/.github/actions/haxe@master
      with:
        haxe-version: 4.0.3

    - name: Install Lua and Deps
      run: |
        pip3 install hererocks
        hererocks ~/lua5.3 -l5.3 -rlatest --cflags="-fPIC"
        source ~/lua5.3/bin/activate
        ln -s ~/lua5.3/lib/liblua53.a ~/lua5.3/lib/liblua.a
        luarocks install haxe-deps

    - name: Checkout ammer
      uses: actions/checkout@v2
      with:
        path: "ammer"

    - name: Set up haxelibs
      run: |
        haxelib dev ammer ammer
        haxelib install utest

    - name: Build native library
      run: |
        cd ammer/tests/native
        make -f Makefile.linux

    - name: Compile tests
      run: |
        source ~/lua5.3/bin/activate
        cd ammer/tests
        haxe -D ammer.lua.luaInclude=`luarocks config --lua-incdir`  -D ammer.lua.luaLibrary=`luarocks config --lua-libdir` build-lua.hxml

    - name: Run tests
      run: |
        sudo apt-get install tree
        source ~/lua5.3/bin/activate
        cp ammer/tests/native/*.so ammer/tests/bin/lua
        tree ammer
        cd ammer/tests/bin/lua
        ls -lt
        lua test.lua
